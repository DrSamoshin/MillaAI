"""create tables"""

from __future__ import annotations

from typing import Sequence

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector

revision: str = '9dfaab78408c'
down_revision: str | Sequence[str] | None = '690dd9d45922'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=True),
    sa.Column('apple_id', sa.String(length=255), nullable=True),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('user', 'admin', name='user_role'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('available_from', sa.Time(), nullable=True),
    sa.Column('available_to', sa.Time(), nullable=True),
    sa.Column('notification_enabled', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('apple_id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('ix_users_created_at', 'users', ['created_at'], unique=False)
    op.create_table('chats',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('last_seq', sa.Integer(), nullable=False),
    sa.Column('last_active_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_chats_created_at', 'chats', ['created_at'], unique=False)
    op.create_index('ix_chats_last_active_at', 'chats', ['last_active_at'], unique=False)
    op.create_index('ix_chats_user_id', 'chats', ['user_id'], unique=False)
    op.create_table('devices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('device_token', sa.String(length=255), nullable=False),
    sa.Column('platform', sa.String(length=20), nullable=False),
    sa.Column('locale', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('last_seen', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_devices_device_token', 'devices', ['device_token'], unique=False)
    op.create_index('ix_devices_last_seen', 'devices', ['last_seen'], unique=False)
    op.create_index('ix_devices_user_id', 'devices', ['user_id'], unique=False)
    op.create_table('mental_states',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('mood', sa.Enum('great', 'good', 'neutral', 'tired', 'stressed', name='mentalstatemood'), nullable=True),
    sa.Column('readiness_level', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('question_asked_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('responded_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mental_states_date'), 'mental_states', ['date'], unique=False)
    op.create_index(op.f('ix_mental_states_id'), 'mental_states', ['id'], unique=False)
    op.create_index(op.f('ix_mental_states_question_asked_at'), 'mental_states', ['question_asked_at'], unique=False)
    op.create_index(op.f('ix_mental_states_user_id'), 'mental_states', ['user_id'], unique=False)
    op.create_table('goals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('chat_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.Enum('career', 'health', 'learning', 'finance', 'personal', 'social', 'creative', name='goalcategory'), nullable=True),
    sa.Column('status', sa.Enum('todo', 'blocked', 'done', 'canceled', name='goalstatus'), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('estimated_duration_days', sa.Integer(), nullable=True),
    sa.Column('difficulty_level', sa.Integer(), nullable=False),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_goals_chat_id'), 'goals', ['chat_id'], unique=False)
    op.create_index(op.f('ix_goals_deadline'), 'goals', ['deadline'], unique=False)
    op.create_index(op.f('ix_goals_id'), 'goals', ['id'], unique=False)
    op.create_index(op.f('ix_goals_status'), 'goals', ['status'], unique=False)
    op.create_index(op.f('ix_goals_user_id'), 'goals', ['user_id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('chat_id', sa.UUID(), nullable=False),
    sa.Column('seq', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('user', 'assistant', 'system', name='messagerole'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('request_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_messages_chat_id_created_at', 'messages', ['chat_id', 'created_at'], unique=False)
    op.create_index('ix_messages_chat_id_seq', 'messages', ['chat_id', 'seq'], unique=False)
    op.create_index('ix_messages_created_at', 'messages', ['created_at'], unique=False)
    op.create_index('ix_messages_request_id', 'messages', ['request_id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('goal_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('event_type', sa.Enum('work', 'meeting', 'break', 'focus_time', 'deadline', 'personal', name='eventtype'), nullable=False),
    sa.Column('status', sa.Enum('scheduled', 'completed', 'cancelled', 'in_progress', name='eventstatus'), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_goal_id'), 'events', ['goal_id'], unique=False)
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_index(op.f('ix_events_start_time'), 'events', ['start_time'], unique=False)
    op.create_index(op.f('ix_events_status'), 'events', ['status'], unique=False)
    op.create_index(op.f('ix_events_user_id'), 'events', ['user_id'], unique=False)
    op.create_table('goal_dependencies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('parent_goal_id', sa.UUID(), nullable=False),
    sa.Column('dependent_goal_id', sa.UUID(), nullable=False),
    sa.Column('dependency_type', sa.Enum('requires', 'enables', 'blocks', 'related', 'parallel', name='dependencytype'), nullable=False),
    sa.Column('strength', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('parent_goal_id != dependent_goal_id', name='no_self_dependency'),
    sa.CheckConstraint('strength BETWEEN 1 AND 5', name='valid_strength'),
    sa.ForeignKeyConstraint(['dependent_goal_id'], ['goals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_goal_id'], ['goals.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parent_goal_id', 'dependent_goal_id', name='unique_goal_dependency')
    )
    op.create_index(op.f('ix_goal_dependencies_dependent_goal_id'), 'goal_dependencies', ['dependent_goal_id'], unique=False)
    op.create_index(op.f('ix_goal_dependencies_id'), 'goal_dependencies', ['id'], unique=False)
    op.create_index(op.f('ix_goal_dependencies_parent_goal_id'), 'goal_dependencies', ['parent_goal_id'], unique=False)
    op.create_table('goal_embeddings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('goal_id', sa.UUID(), nullable=False),
    sa.Column('summary_text', sa.Text(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=False),
    sa.Column('content_hash', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_goal_embeddings_content_hash'), 'goal_embeddings', ['content_hash'], unique=False)
    op.create_index(op.f('ix_goal_embeddings_goal_id'), 'goal_embeddings', ['goal_id'], unique=True)
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('chat_id', sa.UUID(), nullable=False),
    sa.Column('goal_id', sa.UUID(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('notification_type', sa.Enum('motivation', 'rest_suggestion', 'progress_check', 'goal_reminder', 'celebration', 'planning', name='notificationtype'), nullable=False),
    sa.Column('scheduled_for', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('pending', 'sent', 'dismissed', name='notificationstatus'), nullable=False),
    sa.Column('sent_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_chat_id'), 'notifications', ['chat_id'], unique=False)
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_notification_type'), 'notifications', ['notification_type'], unique=False)
    op.create_index(op.f('ix_notifications_scheduled_for'), 'notifications', ['scheduled_for'], unique=False)
    op.create_index(op.f('ix_notifications_status'), 'notifications', ['status'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_status'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_scheduled_for'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_notification_type'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_chat_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_goal_embeddings_goal_id'), table_name='goal_embeddings')
    op.drop_index(op.f('ix_goal_embeddings_content_hash'), table_name='goal_embeddings')
    op.drop_table('goal_embeddings')
    op.drop_index(op.f('ix_goal_dependencies_parent_goal_id'), table_name='goal_dependencies')
    op.drop_index(op.f('ix_goal_dependencies_id'), table_name='goal_dependencies')
    op.drop_index(op.f('ix_goal_dependencies_dependent_goal_id'), table_name='goal_dependencies')
    op.drop_table('goal_dependencies')
    op.drop_index(op.f('ix_events_user_id'), table_name='events')
    op.drop_index(op.f('ix_events_status'), table_name='events')
    op.drop_index(op.f('ix_events_start_time'), table_name='events')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_index(op.f('ix_events_goal_id'), table_name='events')
    op.drop_table('events')
    op.drop_index('ix_messages_request_id', table_name='messages')
    op.drop_index('ix_messages_created_at', table_name='messages')
    op.drop_index('ix_messages_chat_id_seq', table_name='messages')
    op.drop_index('ix_messages_chat_id_created_at', table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_goals_user_id'), table_name='goals')
    op.drop_index(op.f('ix_goals_status'), table_name='goals')
    op.drop_index(op.f('ix_goals_id'), table_name='goals')
    op.drop_index(op.f('ix_goals_deadline'), table_name='goals')
    op.drop_index(op.f('ix_goals_chat_id'), table_name='goals')
    op.drop_table('goals')
    op.drop_index(op.f('ix_mental_states_user_id'), table_name='mental_states')
    op.drop_index(op.f('ix_mental_states_question_asked_at'), table_name='mental_states')
    op.drop_index(op.f('ix_mental_states_id'), table_name='mental_states')
    op.drop_index(op.f('ix_mental_states_date'), table_name='mental_states')
    op.drop_table('mental_states')
    op.drop_index('ix_devices_user_id', table_name='devices')
    op.drop_index('ix_devices_last_seen', table_name='devices')
    op.drop_index('ix_devices_device_token', table_name='devices')
    op.drop_table('devices')
    op.drop_index('ix_chats_user_id', table_name='chats')
    op.drop_index('ix_chats_last_active_at', table_name='chats')
    op.drop_index('ix_chats_created_at', table_name='chats')
    op.drop_table('chats')
    op.drop_index('ix_users_created_at', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
